@page
@using System.Security.Claims;
@model CASPARWeb.Areas.Instr.Pages.Wishlists.IndexModel
@{
}
@* <input type="hidden" asp-for="WishlistId"> *@
<div class="container">
	<div class="row pt=4">
		<!--Start Row-->
		<div class="col-4">
			<!--50% of row-->
			<h2 class="text-primary">
				Instructor Preferences
			</h2>
		</div><!-- End 1st Column-->
		<div class="col-3 text-end">
			<!--25% row right justified-->
			<span style="display:none" id="selectedSemesterId">@(Model.SelectedSemesterId != 0 ? Model.SelectedSemesterId : "0")</span>
			<select id="ddlSemesterInstance" class="form-select rounded">
			</select>
		</div> <!--End 2nd Column-->
	</div> <!--End Row-->
	<div id="accordion">
		<div class="card">
			<a class="btn-primary" data-bs-toggle="collapse" href="#collapseOne" style="text-decoration: none;">
				<div class="card-header">
					<h5>Details</h5>
				</div>
			</a>
			<div id="collapseOne" class="collapse show" data-bs-parent="#accordion">
				<div class="card-body">
					<div class="row pt=4">
						<form method="post" class="row">
							<div class="col-2">
								<label><h6>Modalities</h6></label>
								<hr />
							
									<input type="hidden" asp-for="objWishlist.Id">
									<div class="col-12 px-2" id="modalities">
										@foreach (var modality in Model.ModalityList)
										{
											<div>
											<input class="form-check-input" onchange="updateCheckboxModality()" type="checkbox" value="@modality.ModalityName" @(Model.AttachedModalityList.Contains(modality.ModalityName) ? "checked" : "") />
												<label>@modality.ModalityName</label>
											</div>
										}
									</div>
									<input type="hidden" id="modalityArrayInput" asp-for="returnedAttachedModality" value="" />
									<button type="submit" asp-page-handler="modality" asp-route-selectedSemesterId="@Model.SelectedSemesterId" class="btn btn-primary form-control">Submit</button>
							</div>

							<div class="col-4">
								<label><h6>Time Blocks</h6></label>
								<hr />
								<div class="row">
									<div class="col-6" id="timeBlocks1">
										@{
											var count = 0;
										}
										@foreach (var timeBlock in Model.TimeBlockList)
										{
											if (count % 2 == 0)
											{
												<div>
													<input class="form-check-input" onchange="updateCheckboxTimeBlock()" type="checkbox" value="@timeBlock.TimeBlockValue" @(Model.AttachedTimeBlockList.Contains(timeBlock.TimeBlockValue) ? "checked" : "") />
													<label>@timeBlock.TimeBlockValue</label>
												</div>
											}
											count++;
										}
										<input type="hidden" id="timeBlockArrayInput" asp-for="returnedAttachedTimeBlock" value="" />
									</div>
									<div class="col-6" id="timeBlocks2">
										@{
											count = 0;
										}
										@foreach (var timeBlock in Model.TimeBlockList)
										{
											if (count % 2 != 0)
											{
												<div>
													<input class="form-check-input" onchange="updateCheckboxTimeBlock()" type="checkbox" value="@timeBlock.TimeBlockValue" @(Model.AttachedTimeBlockList.Contains(timeBlock.TimeBlockValue) ? "checked" : "") />
													<label>@timeBlock.TimeBlockValue</label>
												</div>
											}
											count++;
										}
									</div>
								</div>
							</div>


						</form>

						

						<div class="col-2">
							<label><h6>Days of Week</h6></label>
							<hr />
							<div class="col-12 px-2" id="daysOfWeek">
							</div>
						</div>

						<div class="col-3">
							<label><h6>Campuses</h6></label>
							<hr />
							<div class="col-12 px-2" id="campuses">
							</div>
						</div>
				</div>
			</div>
		</div>

		<div class="card">
			<a class="btn-primary" data-bs-toggle="collapse" href="#collapseTwo" style="text-decoration: none;">
				<div class="card-header">
					<h5>Courses</h5>
				</div>
			</a>
			<div id="collapseTwo" class="collapse show" data-bs-parent="#accordion">
					<div class="row p-3">
						<!--Start Row-->
						<form class="row" method="post">
							<div class="col-1">
								<label for="rank">Rank:</label><br>
								<input type="number" id="rank" name="rank" min="1" style="width: 60%;">
							</div>
							<div class="col-5">
								<select id="ddlTemplateCourses" name="selectedCourse" class="form-select rounded">
								</select>
							</div>
							<div class="col-2">
								<button type="submit" asp-page-handler="add" asp-route-selectedSemesterId="@Model.SelectedSemesterId" asp-route-selectedCourse="@Model.SelectedCourse" class="btn btn-outline-primary rounded" id="btnAddCourse"><i class="bi bi-plus-circle"></i></button>
							</div>
						</form>
					</div> <!--End Row-->


					<table class="table table-bordered table-striped p-3" id="T_WishlistCourses" style="width:100%">
						
					</table>
			</div>
		</div>
	</div>
</div> <!--Close Container-->
	@section Scripts{
		<script>
			function updateCheckboxModality() {
				//get all "checked" checkbox values
				var checkboxes = document.querySelectorAll('.form-check-input');
				var checkedValues = [];
				console.log("");

				//swal.fire('Error', 'TEST', 'error');
				// Loop through each checkbox
				checkboxes.forEach(function (checkbox) {
					if (checkbox.checked) {
						console.log(checkbox.value);
						checkedValues.push(checkbox.value);
					}
				});
				console.log("Checked Boxes: " + checkedValues.length);
				//generate the comma separated return list
				var returnList = "";
				for (var i = 0; i < checkedValues.length; i++) {
					returnList = returnList + checkedValues[i];
					if (i < checkedValues.length - 1) {
						returnList = returnList + ",";
					}
				}
				document.getElementById('modalityArrayInput').value = returnList;
				//if the list is empty set the return string to '_'
				if (checkedValues.length == 0) {
					document.getElementById('modalityArrayInput').value = "_";
				}
				console.log("Return string: " + document.getElementById('modalityArrayInput').value);
			}
			function updateCheckboxTimeBlock() {
				//get all "checked" checkbox values
				var checkboxes = document.querySelectorAll('.form-check-input');
				var checkedValues = [];
				console.log("");

				//swal.fire('Error', 'TEST', 'error');
				// Loop through each checkbox
				checkboxes.forEach(function (checkbox) {
					if (checkbox.checked) {
						console.log(checkbox.value);
						checkedValues.push(checkbox.value);
					}
				});
				console.log("Checked Boxes: " + checkedValues.length);
				//generate the comma separated return list
				var returnList = "";
				for (var i = 0; i < checkedValues.length; i++) {
					returnList = returnList + checkedValues[i];
					if (i < checkedValues.length - 1) {
						returnList = returnList + ",";
					}
				}
				document.getElementById('timeBlockArrayInput').value = returnList;
				//if the list is empty set the return string to '_'
				if (checkedValues.length == 0) {
					document.getElementById('timeBlockArrayInput').value = "_";
				}
				console.log("Return string: " + document.getElementById('timeBlockArrayInput').value);
			}
		</script>
		<script type="text/javascript">
			var userId = '@User.FindFirstValue(ClaimTypes.NameIdentifier)';
		</script>
		<script src="~/js/preferenceLists.js"></script>
	}
